-- =====================================================
-- STIMULI SCHEMA - Outbound Responses
-- =====================================================
-- This schema manages all outbound stimuli generated by the system:
-- offers, campaigns, messages, and other responses targeted at specific
-- cohorts or individual actors based on their profiles and behavior.

-- =====================================================
-- STIMULI BASE TABLE
-- =====================================================
-- Common fields for all stimulus types
CREATE TABLE stimuli.stimuli_base (
    stimulus_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    brand_id UUID NOT NULL REFERENCES core.brands(brand_id) ON DELETE CASCADE,
    
    -- Stimulus identification
    stimulus_type TEXT NOT NULL, -- 'offer', 'campaign', 'message', 'notification', 'promotion'
    stimulus_name TEXT NOT NULL,
    stimulus_description TEXT,
    
    -- Content and presentation
    content_data JSONB NOT NULL, -- The actual stimulus content
    presentation_config JSONB DEFAULT '{}', -- How to present the stimulus
    
    -- Targeting information
    target_cohort_id UUID REFERENCES cohorts.cohorts(cohort_id),
    target_actor_id UUID REFERENCES actors.actors(actor_id),
    target_criteria JSONB DEFAULT '{}', -- Additional targeting criteria
    
    -- Generation metadata
    generated_by TEXT NOT NULL, -- 'system', 'user', 'ai_model', 'template'
    generation_algorithm TEXT, -- Which algorithm generated this
    generation_parameters JSONB DEFAULT '{}',
    generation_confidence FLOAT DEFAULT 0.0, -- 0-1 confidence in generation quality
    
    -- Reasoning and traceability
    reasoning_log_id UUID, -- Will reference ai.reasoning_logs
    decision_factors JSONB DEFAULT '[]', -- Factors that led to this stimulus
    expected_outcomes JSONB DEFAULT '{}', -- What we expect to happen
    
    -- Status and lifecycle
    status TEXT NOT NULL DEFAULT 'draft', -- 'draft', 'approved', 'scheduled', 'active', 'paused', 'completed', 'cancelled'
    priority INTEGER DEFAULT 0, -- Higher numbers = higher priority
    
    -- Timing
    created_at TIMESTAMPTZ DEFAULT NOW(),
    scheduled_for TIMESTAMPTZ,
    activated_at TIMESTAMPTZ,
    expires_at TIMESTAMPTZ,
    completed_at TIMESTAMPTZ,
    
    -- Performance tracking
    total_sent INTEGER DEFAULT 0,
    total_delivered INTEGER DEFAULT 0,
    total_opened INTEGER DEFAULT 0,
    total_clicked INTEGER DEFAULT 0,
    total_converted INTEGER DEFAULT 0,
    
    -- Quality metrics
    quality_score FLOAT DEFAULT 0.0, -- 0-1 overall quality
    relevance_score FLOAT DEFAULT 0.0, -- 0-1 relevance to target
    effectiveness_score FLOAT DEFAULT 0.0, -- 0-1 expected effectiveness
    
    -- Constraints
    CONSTRAINT valid_stimulus_type CHECK (stimulus_type IN (
        'offer', 'campaign', 'message', 'notification', 'promotion', 'survey', 'reminder', 'other'
    )),
    CONSTRAINT valid_generated_by CHECK (generated_by IN ('system', 'user', 'ai_model', 'template', 'hybrid')),
    CONSTRAINT valid_status CHECK (status IN (
        'draft', 'approved', 'scheduled', 'active', 'paused', 'completed', 'cancelled', 'failed'
    )),
    CONSTRAINT valid_confidence_scores CHECK (
        generation_confidence >= 0 AND generation_confidence <= 1 AND
        quality_score >= 0 AND quality_score <= 1 AND
        relevance_score >= 0 AND relevance_score <= 1 AND
        effectiveness_score >= 0 AND effectiveness_score <= 1
    ),
    CONSTRAINT valid_counts CHECK (
        total_sent >= 0 AND total_delivered >= 0 AND total_opened >= 0 AND
        total_clicked >= 0 AND total_converted >= 0 AND
        total_delivered <= total_sent AND total_opened <= total_delivered AND
        total_clicked <= total_opened AND total_converted <= total_clicked
    )
);

-- =====================================================
-- OFFERS TABLE
-- =====================================================
-- Specific offers and promotions
CREATE TABLE stimuli.offers (
    stimulus_id UUID PRIMARY KEY REFERENCES stimuli.stimuli_base(stimulus_id) ON DELETE CASCADE,
    
    -- Offer details
    offer_type TEXT NOT NULL, -- 'discount', 'free_item', 'bogo', 'loyalty_points', 'early_access'
    offer_value DECIMAL(10,2), -- Monetary value of the offer
    offer_percentage FLOAT, -- Percentage discount (0-100)
    offer_description TEXT NOT NULL,
    
    -- Terms and conditions
    terms_and_conditions TEXT,
    minimum_purchase DECIMAL(10,2),
    maximum_discount DECIMAL(10,2),
    usage_limit INTEGER, -- How many times can be used
    usage_limit_per_customer INTEGER, -- Per-customer limit
    
    -- Validity
    valid_from TIMESTAMPTZ NOT NULL,
    valid_until TIMESTAMPTZ NOT NULL,
    redemption_deadline TIMESTAMPTZ,
    
    -- Product/service targeting
    applicable_products JSONB DEFAULT '[]', -- Product IDs or categories
    applicable_services JSONB DEFAULT '[]', -- Service IDs or categories
    excluded_products JSONB DEFAULT '[]', -- Products excluded from offer
    
    -- Business rules
    business_rules JSONB DEFAULT '{}', -- Additional business logic
    approval_required BOOLEAN DEFAULT false,
    approval_status TEXT DEFAULT 'pending',
    approved_by UUID REFERENCES core.users(user_id),
    approved_at TIMESTAMPTZ,
    
    -- Performance tracking
    redemption_count INTEGER DEFAULT 0,
    redemption_value DECIMAL(10,2) DEFAULT 0,
    conversion_rate FLOAT DEFAULT 0.0, -- 0-1 conversion rate
    
    -- Constraints
    CONSTRAINT valid_offer_type CHECK (offer_type IN (
        'discount', 'free_item', 'bogo', 'loyalty_points', 'early_access', 
        'free_shipping', 'upgrade', 'bundle', 'other'
    )),
    CONSTRAINT valid_approval_status CHECK (approval_status IN ('pending', 'approved', 'rejected', 'expired')),
    CONSTRAINT valid_percentage CHECK (offer_percentage IS NULL OR (offer_percentage >= 0 AND offer_percentage <= 100)),
    CONSTRAINT valid_limits CHECK (
        (usage_limit IS NULL OR usage_limit > 0) AND
        (usage_limit_per_customer IS NULL OR usage_limit_per_customer > 0) AND
        (minimum_purchase IS NULL OR minimum_purchase >= 0) AND
        (maximum_discount IS NULL OR maximum_discount >= 0)
    ),
    CONSTRAINT valid_dates CHECK (valid_from < valid_until),
    CONSTRAINT valid_conversion_rate CHECK (conversion_rate >= 0 AND conversion_rate <= 1)
);

-- =====================================================
-- CAMPAIGNS TABLE
-- =====================================================
-- Marketing campaigns and initiatives
CREATE TABLE stimuli.campaigns (
    stimulus_id UUID PRIMARY KEY REFERENCES stimuli.stimuli_base(stimulus_id) ON DELETE CASCADE,
    
    -- Campaign details
    campaign_type TEXT NOT NULL, -- 'email', 'sms', 'push', 'social', 'display', 'retargeting'
    campaign_goal TEXT NOT NULL, -- 'awareness', 'engagement', 'conversion', 'retention', 'reactivation'
    campaign_theme TEXT, -- Overall theme or message
    
    -- Content structure
    subject_line TEXT, -- For email campaigns
    headline TEXT,
    body_text TEXT,
    call_to_action TEXT,
    media_urls JSONB DEFAULT '[]', -- Images, videos, etc.
    
    -- Channel-specific settings
    channel_config JSONB DEFAULT '{}', -- Channel-specific configuration
    delivery_schedule JSONB DEFAULT '{}', -- When and how often to send
    
    -- Audience targeting
    audience_segments JSONB DEFAULT '[]', -- Specific audience segments
    exclusion_criteria JSONB DEFAULT '{}', -- Who to exclude
    personalization_level TEXT DEFAULT 'basic', -- 'basic', 'moderate', 'high', 'custom'
    
    -- Budget and limits
    budget_limit DECIMAL(10,2),
    daily_budget_limit DECIMAL(10,2),
    max_sends_per_day INTEGER,
    total_send_limit INTEGER,
    
    -- Performance targets
    target_open_rate FLOAT, -- 0-1 target open rate
    target_click_rate FLOAT, -- 0-1 target click rate
    target_conversion_rate FLOAT, -- 0-1 target conversion rate
    target_roi FLOAT, -- Target return on investment
    
    -- A/B testing
    is_ab_test BOOLEAN DEFAULT false,
    ab_test_variant TEXT, -- 'control', 'variant_a', 'variant_b', etc.
    ab_test_percentage FLOAT, -- Percentage of audience for this variant
    ab_test_winner TEXT, -- Which variant won
    
    -- Constraints
    CONSTRAINT valid_campaign_type CHECK (campaign_type IN (
        'email', 'sms', 'push', 'social', 'display', 'retargeting', 'search', 'video', 'other'
    )),
    CONSTRAINT valid_campaign_goal CHECK (campaign_goal IN (
        'awareness', 'engagement', 'conversion', 'retention', 'reactivation', 'education', 'other'
    )),
    CONSTRAINT valid_personalization_level CHECK (personalization_level IN (
        'basic', 'moderate', 'high', 'custom'
    )),
    CONSTRAINT valid_ab_test_variant CHECK (ab_test_variant IN (
        'control', 'variant_a', 'variant_b', 'variant_c', 'variant_d'
    )),
    CONSTRAINT valid_ab_test_percentage CHECK (ab_test_percentage IS NULL OR (ab_test_percentage >= 0 AND ab_test_percentage <= 100)),
    CONSTRAINT valid_target_rates CHECK (
        (target_open_rate IS NULL OR (target_open_rate >= 0 AND target_open_rate <= 1)) AND
        (target_click_rate IS NULL OR (target_click_rate >= 0 AND target_click_rate <= 1)) AND
        (target_conversion_rate IS NULL OR (target_conversion_rate >= 0 AND target_conversion_rate <= 1))
    )
);

-- =====================================================
-- MESSAGES TABLE
-- =====================================================
-- Individual messages and communications
CREATE TABLE stimuli.messages (
    stimulus_id UUID PRIMARY KEY REFERENCES stimuli.stimuli_base(stimulus_id) ON DELETE CASCADE,
    
    -- Message details
    message_type TEXT NOT NULL, -- 'text', 'image', 'video', 'audio', 'document', 'interactive'
    message_channel TEXT NOT NULL, -- 'whatsapp', 'sms', 'email', 'push', 'in_app'
    
    -- Content
    message_text TEXT,
    media_url TEXT,
    media_type TEXT,
    media_caption TEXT,
    
    -- Interactive elements
    quick_replies JSONB DEFAULT '[]', -- Quick reply options
    buttons JSONB DEFAULT '[]', -- Interactive buttons
    carousel_items JSONB DEFAULT '[]', -- Carousel or card items
    
    -- Personalization
    personalization_tokens JSONB DEFAULT '{}', -- Tokens to replace in message
    dynamic_content JSONB DEFAULT '{}', -- Dynamic content based on actor profile
    
    -- Delivery settings
    delivery_method TEXT DEFAULT 'immediate', -- 'immediate', 'scheduled', 'triggered'
    delivery_priority TEXT DEFAULT 'normal', -- 'low', 'normal', 'high', 'urgent'
    retry_attempts INTEGER DEFAULT 3,
    retry_delay_minutes INTEGER DEFAULT 5,
    
    -- Response handling
    expect_response BOOLEAN DEFAULT false,
    response_timeout_minutes INTEGER,
    response_handlers JSONB DEFAULT '[]', -- How to handle responses
    
    -- Constraints
    CONSTRAINT valid_message_type CHECK (message_type IN (
        'text', 'image', 'video', 'audio', 'document', 'interactive', 'template', 'other'
    )),
    CONSTRAINT valid_message_channel CHECK (message_channel IN (
        'whatsapp', 'sms', 'email', 'push', 'in_app', 'web', 'social', 'other'
    )),
    CONSTRAINT valid_delivery_method CHECK (delivery_method IN (
        'immediate', 'scheduled', 'triggered', 'batch'
    )),
    CONSTRAINT valid_delivery_priority CHECK (delivery_priority IN (
        'low', 'normal', 'high', 'urgent'
    )),
    CONSTRAINT valid_retry_settings CHECK (
        retry_attempts >= 0 AND retry_delay_minutes >= 0
    )
);

-- =====================================================
-- STIMULUS DEPLOYMENTS TABLE
-- =====================================================
-- Track actual deployments of stimuli to actors
CREATE TABLE stimuli.stimulus_deployments (
    deployment_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    stimulus_id UUID NOT NULL REFERENCES stimuli.stimuli_base(stimulus_id) ON DELETE CASCADE,
    actor_id UUID NOT NULL REFERENCES actors.actors(actor_id) ON DELETE CASCADE,
    
    -- Deployment details
    deployment_channel TEXT NOT NULL, -- Channel used for deployment
    deployment_method TEXT NOT NULL, -- 'push', 'pull', 'scheduled', 'triggered'
    
    -- Content delivered
    delivered_content JSONB NOT NULL, -- Actual content that was delivered
    personalization_applied JSONB DEFAULT '{}', -- Personalization that was applied
    
    -- Timing
    scheduled_for TIMESTAMPTZ,
    deployed_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    expires_at TIMESTAMPTZ,
    
    -- Status tracking
    delivery_status TEXT NOT NULL DEFAULT 'pending', -- 'pending', 'sent', 'delivered', 'failed', 'expired'
    delivery_attempts INTEGER DEFAULT 0,
    last_delivery_attempt TIMESTAMPTZ,
    
    -- Response tracking
    response_status TEXT, -- 'none', 'opened', 'clicked', 'responded', 'converted'
    response_timestamp TIMESTAMPTZ,
    response_data JSONB DEFAULT '{}',
    
    -- Performance metrics
    time_to_open INTEGER, -- Seconds from deployment to open
    time_to_click INTEGER, -- Seconds from deployment to click
    time_to_convert INTEGER, -- Seconds from deployment to conversion
    
    -- Error handling
    error_message TEXT,
    error_code TEXT,
    error_details JSONB DEFAULT '{}',
    
    -- Constraints
    CONSTRAINT valid_deployment_channel CHECK (deployment_channel IN (
        'whatsapp', 'sms', 'email', 'push', 'in_app', 'web', 'social', 'other'
    )),
    CONSTRAINT valid_deployment_method CHECK (deployment_method IN (
        'push', 'pull', 'scheduled', 'triggered', 'batch'
    )),
    CONSTRAINT valid_delivery_status CHECK (delivery_status IN (
        'pending', 'sent', 'delivered', 'failed', 'expired', 'cancelled'
    )),
    CONSTRAINT valid_response_status CHECK (response_status IN (
        'none', 'opened', 'clicked', 'responded', 'converted', 'bounced', 'unsubscribed'
    )),
    CONSTRAINT valid_attempts CHECK (delivery_attempts >= 0)
);

-- =====================================================
-- STIMULUS TEMPLATES TABLE
-- =====================================================
-- Reusable templates for generating stimuli
CREATE TABLE stimuli.stimulus_templates (
    template_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    brand_id UUID NOT NULL REFERENCES core.brands(brand_id) ON DELETE CASCADE,
    
    -- Template identification
    template_name TEXT NOT NULL,
    template_type TEXT NOT NULL, -- 'offer', 'campaign', 'message', 'notification'
    template_category TEXT, -- 'welcome', 'promotional', 'transactional', 'educational'
    template_description TEXT,
    
    -- Template content
    template_structure JSONB NOT NULL, -- Template structure and placeholders
    default_content JSONB DEFAULT '{}', -- Default content values
    required_fields JSONB DEFAULT '[]', -- Fields that must be provided
    optional_fields JSONB DEFAULT '[]', -- Optional fields
    
    -- Targeting rules
    target_cohort_criteria JSONB DEFAULT '{}', -- Which cohorts this template is for
    target_actor_criteria JSONB DEFAULT '{}', -- Which actors this template is for
    exclusion_criteria JSONB DEFAULT '{}', -- Who to exclude
    
    -- Usage rules
    usage_limits JSONB DEFAULT '{}', -- Usage limits and restrictions
    priority INTEGER DEFAULT 0, -- Template priority
    is_active BOOLEAN DEFAULT true,
    
    -- Performance tracking
    usage_count INTEGER DEFAULT 0,
    success_rate FLOAT DEFAULT 0.0, -- 0-1 success rate
    avg_effectiveness FLOAT DEFAULT 0.0, -- 0-1 average effectiveness
    
    -- Metadata
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    created_by UUID REFERENCES core.users(user_id),
    
    -- Constraints
    CONSTRAINT valid_template_type CHECK (template_type IN (
        'offer', 'campaign', 'message', 'notification', 'promotion', 'survey', 'other'
    )),
    CONSTRAINT valid_template_category CHECK (template_category IN (
        'welcome', 'promotional', 'transactional', 'educational', 'reminder', 'reengagement', 'other'
    )),
    CONSTRAINT valid_rates CHECK (
        success_rate >= 0 AND success_rate <= 1 AND
        avg_effectiveness >= 0 AND avg_effectiveness <= 1
    ),
    CONSTRAINT valid_usage_count CHECK (usage_count >= 0)
);

-- =====================================================
-- STIMULUS PERFORMANCE METRICS TABLE
-- =====================================================
-- Detailed performance tracking for stimuli
CREATE TABLE stimuli.stimulus_performance_metrics (
    metric_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    stimulus_id UUID NOT NULL REFERENCES stimuli.stimuli_base(stimulus_id) ON DELETE CASCADE,
    
    -- Metric details
    metric_name TEXT NOT NULL, -- 'open_rate', 'click_rate', 'conversion_rate', 'revenue', etc.
    metric_value FLOAT NOT NULL,
    metric_unit TEXT, -- 'percentage', 'count', 'currency', 'score'
    
    -- Time period
    measurement_period_start TIMESTAMPTZ NOT NULL,
    measurement_period_end TIMESTAMPTZ NOT NULL,
    measurement_date TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    
    -- Context
    context_type TEXT, -- 'overall', 'by_cohort', 'by_channel', 'by_time_period'
    context_id UUID, -- ID of the specific context
    context_data JSONB DEFAULT '{}', -- Additional context information
    
    -- Statistical measures
    sample_size INTEGER NOT NULL,
    confidence_interval_lower FLOAT,
    confidence_interval_upper FLOAT,
    p_value FLOAT,
    
    -- Comparison metrics
    baseline_value FLOAT, -- Comparison baseline
    improvement_over_baseline FLOAT, -- Improvement percentage
    percentile_rank FLOAT, -- Percentile rank among similar stimuli
    
    -- Quality metrics
    data_quality_score FLOAT DEFAULT 0.0, -- 0-1 quality of underlying data
    measurement_confidence FLOAT DEFAULT 0.0, -- 0-1 confidence in measurement
    
    -- Constraints
    CONSTRAINT valid_metric_value CHECK (metric_value >= 0),
    CONSTRAINT valid_sample_size CHECK (sample_size > 0),
    CONSTRAINT valid_period CHECK (measurement_period_start < measurement_period_end),
    CONSTRAINT valid_quality_scores CHECK (
        data_quality_score >= 0 AND data_quality_score <= 1 AND
        measurement_confidence >= 0 AND measurement_confidence <= 1
    ),
    CONSTRAINT valid_percentile CHECK (percentile_rank IS NULL OR (percentile_rank >= 0 AND percentile_rank <= 100))
);

-- =====================================================
-- INDEXES FOR STIMULI SCHEMA
-- =====================================================

-- Stimuli base indexes
CREATE INDEX idx_stimuli_base_brand_id ON stimuli.stimuli_base(brand_id);
CREATE INDEX idx_stimuli_base_type ON stimuli.stimuli_base(stimulus_type);
CREATE INDEX idx_stimuli_base_status ON stimuli.stimuli_base(status);
CREATE INDEX idx_stimuli_base_target_cohort_id ON stimuli.stimuli_base(target_cohort_id) WHERE target_cohort_id IS NOT NULL;
CREATE INDEX idx_stimuli_base_target_actor_id ON stimuli.stimuli_base(target_actor_id) WHERE target_actor_id IS NOT NULL;
CREATE INDEX idx_stimuli_base_created_at ON stimuli.stimuli_base(created_at);
CREATE INDEX idx_stimuli_base_scheduled_for ON stimuli.stimuli_base(scheduled_for) WHERE scheduled_for IS NOT NULL;
CREATE INDEX idx_stimuli_base_priority ON stimuli.stimuli_base(priority);

-- Offers indexes
CREATE INDEX idx_offers_type ON stimuli.offers(offer_type);
CREATE INDEX idx_offers_valid_from ON stimuli.offers(valid_from);
CREATE INDEX idx_offers_valid_until ON stimuli.offers(valid_until);
CREATE INDEX idx_offers_approval_status ON stimuli.offers(approval_status);
CREATE INDEX idx_offers_redemption_count ON stimuli.offers(redemption_count);

-- Campaigns indexes
CREATE INDEX idx_campaigns_type ON stimuli.campaigns(campaign_type);
CREATE INDEX idx_campaigns_goal ON stimuli.campaigns(campaign_goal);
CREATE INDEX idx_campaigns_ab_test ON stimuli.campaigns(is_ab_test) WHERE is_ab_test = true;
CREATE INDEX idx_campaigns_variant ON stimuli.campaigns(ab_test_variant);

-- Messages indexes
CREATE INDEX idx_messages_type ON stimuli.messages(message_type);
CREATE INDEX idx_messages_channel ON stimuli.messages(message_channel);
CREATE INDEX idx_messages_delivery_method ON stimuli.messages(delivery_method);
CREATE INDEX idx_messages_expect_response ON stimuli.messages(expect_response) WHERE expect_response = true;

-- Stimulus deployments indexes
CREATE INDEX idx_stimulus_deployments_stimulus_id ON stimuli.stimulus_deployments(stimulus_id);
CREATE INDEX idx_stimulus_deployments_actor_id ON stimuli.stimulus_deployments(actor_id);
CREATE INDEX idx_stimulus_deployments_channel ON stimuli.stimulus_deployments(deployment_channel);
CREATE INDEX idx_stimulus_deployments_status ON stimuli.stimulus_deployments(delivery_status);
CREATE INDEX idx_stimulus_deployments_deployed_at ON stimuli.stimulus_deployments(deployed_at);
CREATE INDEX idx_stimulus_deployments_response_status ON stimuli.stimulus_deployments(response_status) WHERE response_status IS NOT NULL;

-- Stimulus templates indexes
CREATE INDEX idx_stimulus_templates_brand_id ON stimuli.stimulus_templates(brand_id);
CREATE INDEX idx_stimulus_templates_type ON stimuli.stimulus_templates(template_type);
CREATE INDEX idx_stimulus_templates_category ON stimuli.stimulus_templates(template_category);
CREATE INDEX idx_stimulus_templates_active ON stimuli.stimulus_templates(is_active) WHERE is_active = true;
CREATE INDEX idx_stimulus_templates_usage_count ON stimuli.stimulus_templates(usage_count);

-- Stimulus performance metrics indexes
CREATE INDEX idx_stimulus_performance_metrics_stimulus_id ON stimuli.stimulus_performance_metrics(stimulus_id);
CREATE INDEX idx_stimulus_performance_metrics_name ON stimuli.stimulus_performance_metrics(metric_name);
CREATE INDEX idx_stimulus_performance_metrics_measurement_date ON stimuli.stimulus_performance_metrics(measurement_date);
CREATE INDEX idx_stimulus_performance_metrics_context ON stimuli.stimulus_performance_metrics(context_type);

-- =====================================================
-- TRIGGERS FOR STIMULI SCHEMA
-- =====================================================

-- Update stimulus timestamps
CREATE TRIGGER update_stimuli_base_updated_at 
    BEFORE UPDATE ON stimuli.stimuli_base 
    FOR EACH ROW EXECUTE FUNCTION core.update_updated_at_column();

CREATE TRIGGER update_stimulus_templates_updated_at 
    BEFORE UPDATE ON stimuli.stimulus_templates 
    FOR EACH ROW EXECUTE FUNCTION core.update_updated_at_column();

-- Update template usage count when stimuli are created
CREATE OR REPLACE FUNCTION stimuli.update_template_usage()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.generated_by = 'template' AND NEW.generation_parameters->>'template_id' IS NOT NULL THEN
        UPDATE stimuli.stimulus_templates 
        SET usage_count = usage_count + 1,
            updated_at = NOW()
        WHERE template_id = (NEW.generation_parameters->>'template_id')::UUID;
    END IF;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_template_usage_trigger
    AFTER INSERT ON stimuli.stimuli_base
    FOR EACH ROW EXECUTE FUNCTION stimuli.update_template_usage();

-- =====================================================
-- COMMENTS FOR STIMULI SCHEMA
-- =====================================================

COMMENT ON SCHEMA stimuli IS 'Outbound responses and stimuli generated by the system for actors and cohorts';
COMMENT ON TABLE stimuli.stimuli_base IS 'Base table for all stimulus types with common fields and performance tracking';
COMMENT ON TABLE stimuli.offers IS 'Specific offers and promotions with terms, conditions, and redemption tracking';
COMMENT ON TABLE stimuli.campaigns IS 'Marketing campaigns with A/B testing, targeting, and performance goals';
COMMENT ON TABLE stimuli.messages IS 'Individual messages with personalization, interactive elements, and delivery settings';
COMMENT ON TABLE stimuli.stimulus_deployments IS 'Actual deployments of stimuli to actors with response tracking';
COMMENT ON TABLE stimuli.stimulus_templates IS 'Reusable templates for generating stimuli with targeting rules';
COMMENT ON TABLE stimuli.stimulus_performance_metrics IS 'Detailed performance tracking for stimuli with statistical measures';

COMMENT ON COLUMN stimuli.stimuli_base.generation_confidence IS 'Confidence in the quality of stimulus generation (0-1)';
COMMENT ON COLUMN stimuli.stimuli_base.reasoning_log_id IS 'Link to reasoning log explaining why this stimulus was created';
COMMENT ON COLUMN stimuli.stimuli_base.decision_factors IS 'Factors that led to the creation of this stimulus';
COMMENT ON COLUMN stimuli.offers.redemption_count IS 'Number of times this offer has been redeemed';
COMMENT ON COLUMN stimuli.offers.conversion_rate IS 'Conversion rate for this offer (0-1)';
COMMENT ON COLUMN stimuli.campaigns.ab_test_variant IS 'A/B test variant identifier';
COMMENT ON COLUMN stimuli.campaigns.target_roi IS 'Target return on investment for this campaign';
COMMENT ON COLUMN stimuli.messages.personalization_tokens IS 'Tokens to replace with personalized content';
COMMENT ON COLUMN stimuli.stimulus_deployments.delivered_content IS 'Actual content that was delivered to the actor';
COMMENT ON COLUMN stimuli.stimulus_templates.success_rate IS 'Historical success rate of this template (0-1)';
COMMENT ON COLUMN stimuli.stimulus_performance_metrics.percentile_rank IS 'Percentile rank among similar stimuli';
